{"version":3,"file":"rs-api.es5.js","sources":["../src/bosses/araxxor/models/araxxor-path.model.ts","../src/bosses/araxxor/models/araxxor-rotation.model.ts","../src/bosses/araxxor/models/araxxor-paths.model.ts","../src/bosses/boss-rotation.model.ts","../src/bosses/boss.ts","../src/bosses/araxxor/araxxor.ts","../src/bosses/rots/models/rots-rotation.model.ts","../src/bosses/rots/models/rots-brother.enum.ts","../src/bosses/rots/models/rots-brothers-rotations.model.ts","../src/bosses/rots/rots.ts","../src/bosses/vorago/models/vorago-rotation.model.ts","../src/bosses/vorago/models/vorago-rotations.model.ts","../src/bosses/vorago/vorago.ts","../src/bosses/bosses.ts","../src/rs-api.ts"],"sourcesContent":["/***\n * @model Schema for araxxor path\n */\nexport class AraxxorPath {\n  /* istanbul ignore next */\n  constructor(location?: string, number?: number, characteristic?: string) {\n    this.location = location || ''\n    this.number = number || 0\n    this.characteristic = characteristic || ''\n  }\n  location: string\n  number: number\n  characteristic: string\n}\n","import { AraxxorPath } from './araxxor-path.model'\n\n/***\n * @model Schema for araxxor rotation\n */\nexport class AraxxorRotation {\n  /* istanbul ignore next */\n  constructor(open?: AraxxorPath[], closed?: AraxxorPath) {\n    this.open = open || []\n    this.closed = closed || new AraxxorPath()\n  }\n  open: AraxxorPath[]\n  closed: AraxxorPath\n}\n","import { AraxxorPath } from './araxxor-path.model'\r\n\r\n/***\r\n * @hidden\r\n */\r\nexport class AraxxorPaths {\r\n  constructor() {}\r\n  top: AraxxorPath = new AraxxorPath('top', 1, 'Minions')\r\n  middle: AraxxorPath = new AraxxorPath('middle', 2, 'Acid')\r\n  bottom: AraxxorPath = new AraxxorPath('bottom', 3, 'Darkness')\r\n}\r\n","import { AraxxorRotation } from './araxxor/models/araxxor-rotation.model'\nimport { RoTSRotation } from './rots/models/rots-rotation.model'\nimport { VoragoRotation } from './vorago/models/vorago-rotation.model'\n\nexport class BossRotation {\n  /* istanbul ignore next */\n  constructor(\n    rotation?: AraxxorRotation | RoTSRotation | VoragoRotation,\n    daysUntilNext?: number,\n    startDate?: Date\n  ) {\n    this.rotation = rotation || null\n    this.daysUntilNext = daysUntilNext || -1\n    this.startDate = startDate || new Date()\n  }\n\n  rotation: AraxxorRotation | RoTSRotation | VoragoRotation | null\n  daysUntilNext: number\n  startDate: Date\n}\n","import { BossRotation } from './boss-rotation.model'\n\nexport class Boss {\n  getRotations(forDate?: Date): Promise<BossRotation[]> {\n    return new Promise(resolve => {\n      forDate = forDate == null ? new Date() : forDate\n      resolve(this.getRotationsForSpecific(forDate))\n    })\n  }\n\n  getRotationsForSpecific(forDate: Date): BossRotation[] {\n    return [new BossRotation(undefined, 0, new Date())]\n  }\n}\n","import { AraxxorPath } from './models/araxxor-path.model'\nimport { AraxxorRotation } from './models/araxxor-rotation.model'\nimport { AraxxorPaths } from './models/araxxor-paths.model'\nimport { BossRotation } from '../boss-rotation.model'\nimport { Boss } from '../boss'\n\nexport class Araxxor extends Boss {\n  private availablePaths: AraxxorPaths = new AraxxorPaths()\n  private paths: AraxxorPath[] = [\n    this.availablePaths.top,\n    this.availablePaths.middle,\n    this.availablePaths.bottom\n  ]\n  constructor() {\n    super()\n  }\n\n  getRotationsForSpecific(forDate: Date): BossRotation[] {\n    let rotations: BossRotation[] = []\n    this.paths.forEach((path: AraxxorPath, i: number) => {\n      // find date to calculate for\n      const daysToAdd: number = 4 * i\n      let now: any = new Date(forDate)\n      now.setDate(now.getDate() + daysToAdd)\n      // get rotation index\n      const rotationIndex: number = Math.floor(\n        ((Math.floor(Math.floor(now / 1000) / (24 * 60 * 60)) + 3) % (4 * this.paths.length)) / 4\n      )\n      const closed: AraxxorPath = this.paths[rotationIndex]\n      const open: AraxxorPath[] = this.paths.filter((path: AraxxorPath) => {\n        return path != closed\n      })\n      // find days until the next index would be reached to find last day of rotation\n      const daysUntilNext =\n        4 -\n        (((Math.floor(Date.now() / 1000 / (24 * 60 * 60)) + 3) % (4 * this.paths.length)) % 4) +\n        daysToAdd\n      // find when the current rotation started\n      let start = new Date(forDate)\n      start.setDate(start.getDate() + (daysUntilNext - 4))\n      // build araxxor rotation\n      const rotation: AraxxorRotation = new AraxxorRotation(open, closed)\n      rotations.push(new BossRotation(rotation, daysUntilNext, start))\n    })\n    super.getRotationsForSpecific(forDate)\n    return rotations\n  }\n}\n","import { RoTSBrother } from './rots-brother.enum'\n\n/***\n * @model Schema for a rise of the six rotation\n */\nexport class RoTSRotation {\n  /* istanbul ignore next */\n  constructor(west?: RoTSBrother[], east?: RoTSBrother[]) {\n    this.west = west || null\n    this.east = east || null\n  }\n\n  west: RoTSBrother[] | null\n  east: RoTSBrother[] | null\n}\n","/***\r\n * @hidden\r\n */\r\nexport enum RoTSBrother {\r\n  A = 'Ahrim',\r\n  D = 'Dharok',\r\n  G = 'Guthan',\r\n  K = 'Karil',\r\n  T = 'Torag',\r\n  V = 'Verac',\r\n  UNKNOWN = ''\r\n}\r\n","import { RoTSRotation } from './rots-rotation.model'\r\nimport { RoTSBrother } from './rots-brother.enum'\r\n/***\r\n * @hidden\r\n */\r\nexport class RoTSBrothersRotation {\r\n  rotation: RoTSRotation[] = [\r\n    new RoTSRotation(\r\n      [RoTSBrother.D, RoTSBrother.T, RoTSBrother.V],\r\n      [RoTSBrother.A, RoTSBrother.G, RoTSBrother.K]\r\n    ),\r\n    new RoTSRotation(\r\n      [RoTSBrother.G, RoTSBrother.K, RoTSBrother.T],\r\n      [RoTSBrother.A, RoTSBrother.D, RoTSBrother.V]\r\n    ),\r\n    new RoTSRotation(\r\n      [RoTSBrother.G, RoTSBrother.K, RoTSBrother.V],\r\n      [RoTSBrother.A, RoTSBrother.D, RoTSBrother.T]\r\n    ),\r\n    new RoTSRotation(\r\n      [RoTSBrother.G, RoTSBrother.T, RoTSBrother.V],\r\n      [RoTSBrother.A, RoTSBrother.D, RoTSBrother.K]\r\n    ),\r\n    new RoTSRotation(\r\n      [RoTSBrother.K, RoTSBrother.T, RoTSBrother.V],\r\n      [RoTSBrother.A, RoTSBrother.D, RoTSBrother.G]\r\n    ),\r\n    new RoTSRotation(\r\n      [RoTSBrother.A, RoTSBrother.D, RoTSBrother.G],\r\n      [RoTSBrother.K, RoTSBrother.T, RoTSBrother.V]\r\n    ),\r\n    new RoTSRotation(\r\n      [RoTSBrother.A, RoTSBrother.D, RoTSBrother.K],\r\n      [RoTSBrother.G, RoTSBrother.T, RoTSBrother.V]\r\n    ),\r\n    new RoTSRotation(\r\n      [RoTSBrother.A, RoTSBrother.D, RoTSBrother.T],\r\n      [RoTSBrother.G, RoTSBrother.K, RoTSBrother.V]\r\n    ),\r\n    new RoTSRotation(\r\n      [RoTSBrother.A, RoTSBrother.D, RoTSBrother.V],\r\n      [RoTSBrother.G, RoTSBrother.K, RoTSBrother.T]\r\n    ),\r\n    new RoTSRotation(\r\n      [RoTSBrother.A, RoTSBrother.G, RoTSBrother.K],\r\n      [RoTSBrother.D, RoTSBrother.T, RoTSBrother.V]\r\n    ),\r\n    new RoTSRotation(\r\n      [RoTSBrother.A, RoTSBrother.G, RoTSBrother.T],\r\n      [RoTSBrother.D, RoTSBrother.K, RoTSBrother.V]\r\n    ),\r\n    new RoTSRotation(\r\n      [RoTSBrother.A, RoTSBrother.G, RoTSBrother.V],\r\n      [RoTSBrother.D, RoTSBrother.K, RoTSBrother.T]\r\n    ),\r\n    new RoTSRotation(\r\n      [RoTSBrother.A, RoTSBrother.K, RoTSBrother.T],\r\n      [RoTSBrother.D, RoTSBrother.G, RoTSBrother.V]\r\n    ),\r\n    new RoTSRotation(\r\n      [RoTSBrother.A, RoTSBrother.K, RoTSBrother.V],\r\n      [RoTSBrother.D, RoTSBrother.G, RoTSBrother.T]\r\n    ),\r\n    new RoTSRotation(\r\n      [RoTSBrother.A, RoTSBrother.T, RoTSBrother.V],\r\n      [RoTSBrother.D, RoTSBrother.G, RoTSBrother.K]\r\n    ),\r\n    new RoTSRotation(\r\n      [RoTSBrother.D, RoTSBrother.G, RoTSBrother.K],\r\n      [RoTSBrother.A, RoTSBrother.T, RoTSBrother.V]\r\n    ),\r\n    new RoTSRotation(\r\n      [RoTSBrother.D, RoTSBrother.G, RoTSBrother.T],\r\n      [RoTSBrother.A, RoTSBrother.K, RoTSBrother.V]\r\n    ),\r\n    new RoTSRotation(\r\n      [RoTSBrother.D, RoTSBrother.G, RoTSBrother.V],\r\n      [RoTSBrother.A, RoTSBrother.K, RoTSBrother.T]\r\n    ),\r\n    new RoTSRotation(\r\n      [RoTSBrother.D, RoTSBrother.K, RoTSBrother.T],\r\n      [RoTSBrother.A, RoTSBrother.G, RoTSBrother.V]\r\n    ),\r\n    new RoTSRotation(\r\n      [RoTSBrother.D, RoTSBrother.K, RoTSBrother.V],\r\n      [RoTSBrother.A, RoTSBrother.G, RoTSBrother.T]\r\n    )\r\n  ]\r\n}\r\n","import { BossRotation } from '../boss-rotation.model'\nimport { RoTSBrothersRotation } from './models/rots-brothers-rotations.model'\nimport { RoTSRotation } from './models/rots-rotation.model'\nimport { RoTSBrother } from './models/rots-brother.enum'\nimport { Boss } from '../boss'\n\nexport class RoTS extends Boss {\n  private rotsRotation: RoTSRotation[] = new RoTSBrothersRotation().rotation\n  constructor() {\n    super()\n  }\n\n  getRotationsForSpecific(forDate: Date): BossRotation[] {\n    let rotations: BossRotation[] = []\n    this.rotsRotation.forEach((r: RoTSRotation, i: number) => {\n      let now: any = new Date(forDate)\n      now.setDate(now.getDate() + i)\n      const rotationIndex: number = Math.floor(now / 1000 / (24 * 60 * 60)) % 20\n      const rotation = new RoTSRotation(\n        <RoTSBrother[]>this.rotsRotation[rotationIndex].west,\n        <RoTSBrother[]>this.rotsRotation[rotationIndex].east\n      )\n      rotations.push(new BossRotation(rotation, 1, now))\n    })\n    super.getRotationsForSpecific(forDate)\n    return rotations\n  }\n}\n","export class VoragoRotation {\n  /* istanbul ignore next */\n  constructor(normal?: string, hard?: VoragoHardmode) {\n    this.normal = normal || ''\n    this.hard = hard || new VoragoHardmode()\n  }\n  normal: string\n  hard: VoragoHardmode\n}\n\n/***\n * @hidden\n */\nexport class VoragoHardmode {\n  /* istanbul ignore next */\n  constructor(phase10?: string, phase11?: string, unlock?: string) {\n    this.phase10 = phase10 || ''\n    this.phase11 = phase11 || ''\n    this.unlock = unlock || ''\n  }\n  phase10: string\n  phase11: string\n  unlock: string\n}\n","import { VoragoRotation, VoragoHardmode } from './vorago-rotation.model'\n\n/***\n * @hidden\n */\nexport class VoragoRotations {\n  private ceilings: VoragoRotation = new VoragoRotation(\n    'Ceiling Collapse',\n    new VoragoHardmode('Team Split - Green Bomb', 'Team Split - Vitalis', 'Torso of Omens')\n  )\n  private scopulus: VoragoRotation = new VoragoRotation(\n    'Scopulus',\n    new VoragoHardmode('Purple Bomb - Team Split', 'Purple Bomb - Vitalis', 'Helm of Omens')\n  )\n  private vitalis: VoragoRotation = new VoragoRotation(\n    'Vitalis',\n    new VoragoHardmode('Vitalis - Purple Bomb', 'Vitalis - Bleeds', 'Legs of Omens')\n  )\n  private greenBomb: VoragoRotation = new VoragoRotation(\n    'Green Bomb',\n    new VoragoHardmode('Green Bomb - Vitalis', 'Team Split - Purple Bomb', 'Boots of Omens')\n  )\n  private teamSplit: VoragoRotation = new VoragoRotation(\n    'Team Split',\n    new VoragoHardmode('Team Split - Team Split', 'Team Split - Purple Bomb', 'Maul of Omens')\n  )\n  private theEnd: VoragoRotation = new VoragoRotation(\n    'The End',\n    new VoragoHardmode('Purple Bomb - Bleeds', 'Purple Bomb - Vitalis', 'Gloves of Omens')\n  )\n\n  constructor() {}\n  rotation: VoragoRotation[] = [\n    this.ceilings,\n    this.scopulus,\n    this.vitalis,\n    this.greenBomb,\n    this.teamSplit,\n    this.theEnd\n  ]\n}\n","import { BossRotation } from '../boss-rotation.model'\nimport { VoragoRotation } from './models/vorago-rotation.model'\nimport { VoragoRotations } from './models/vorago-rotations.model'\nimport { Boss } from '../boss'\n\nexport class Vorago extends Boss {\n  private voragoRotations: VoragoRotation[] = new VoragoRotations().rotation\n  constructor() {\n    super()\n  }\n\n  getRotationsForSpecific(forDate: Date): BossRotation[] {\n    let rotations: BossRotation[] = []\n    this.voragoRotations.forEach((r: VoragoRotation, i: number) => {\n      const daysToAdd = 7 * i\n      let now: any = new Date(forDate)\n      now.setDate(now.getDate() + daysToAdd)\n      const rotationIndex = Math.floor(\n        ((Math.floor(Math.floor(now / 1000) / (24 * 60 * 60)) - 6) %\n          (7 * this.voragoRotations.length)) /\n          7\n      )\n      const rotation: VoragoRotation = this.voragoRotations[rotationIndex]\n      const daysUntilNext =\n        7 -\n        (((Math.floor(now / 1000 / (24 * 60 * 60)) - 6) % (7 * this.voragoRotations.length)) % 7) +\n        daysToAdd\n      let start = new Date(forDate)\n      start.setDate(start.getDate() + (daysUntilNext - 7))\n      rotations.push(new BossRotation(rotation, daysUntilNext, start))\n    })\n    super.getRotationsForSpecific(forDate)\n    return rotations\n  }\n}\n","import { Araxxor } from './araxxor/araxxor'\nimport { RoTS } from './rots/rots'\nimport { Vorago } from './vorago/vorago'\n\nexport class Bosses {\n  constructor() {}\n\n  araxxor(): Araxxor {\n    return new Araxxor()\n  }\n  rots(): RoTS {\n    return new RoTS()\n  }\n  vorago(): Vorago {\n    return new Vorago()\n  }\n}\n","// Import here Polyfills if needed. Recommended core-js (npm i -D core-js)\n// import \"core-js/fn/array.find\"\n// ...\nimport { Bosses } from './bosses/bosses'\n\nexport default class RsApi {\n  constructor() {}\n  bosses(): Bosses {\n    return new Bosses()\n  }\n}\n"],"names":["tslib_1.__extends"],"mappings":"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AAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAC9C;YACD,IAAI,YAAY,CACd,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,EAC7C,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAC9C;YACD,IAAI,YAAY,CACd,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,EAC7C,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAC9C;YACD,IAAI,YAAY,CACd,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,EAC7C,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAC9C;YACD,IAAI,YAAY,CACd,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,EAC7C,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAC9C;YACD,IAAI,YAAY,CACd,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,EAC7C,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAC9C;YACD,IAAI,YAAY,CACd,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,EAC7C,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAC9C;YACD,IAAI,YAAY,CACd,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,EAC7C,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAC9C;YACD,IAAI,YAAY,CACd,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,EAC7C,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAC9C;YACD,IAAI,YAAY,CACd,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,EAC7C,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAC9C;YACD,IAAI,YAAY,CACd,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,EAC7C,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAC9C;YACD,IAAI,YAAY,CACd,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,EAC7C,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAC9C;YACD,IAAI,YAAY,CACd,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,EAC7C,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAC9C;YACD,IAAI,YAAY,CACd,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,EAC7C,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAC9C;YACD,IAAI,YAAY,CACd,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,EAC7C,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAC9C;YACD,IAAI,YAAY,CACd,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,EAC7C,CAAC,W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"}